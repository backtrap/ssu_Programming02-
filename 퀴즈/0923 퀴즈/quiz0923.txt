#01

printf("%c\n", *(**p+2));
printf("%c\n", *(*(*(p+1)+1)+2));
printf("%s\n", *(*(p+1)+2));
printf("%s\n", *(*(p+1)+1)+2);


#02

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char * argv[]) {
	int a, b, c, d;
	a = atoi(argv[1]);
	b = atoi(argv[2]);
	c = atoi(argv[3]);
	d = (a + b + c)/3;

	printf("평균은 %d입니다.\n", d);

	return 0;
}


#03

형 한정자인 const가 char와 결합하여 p가 가리키는 주소의 값(내용물)을 변경할 수 없기 때문이다. const 키워드를 삭제하면 포인터 변수 p를 통해서 값을 수정할 수 있다.


#04


#05

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int compare(const void * p, const void * q);

int main() {
	char * arr[10];
	char temp[100];

	for (int i = 0; i < 10; i++) {
		printf("%d번째 단어를 입력하세요 : ", i+1);
		scanf("%s", temp);
		getchar();

		arr[i] = (char *)calloc(strlen(temp) + 1, sizeof(char));
		strcpy(arr[i], temp);		
	}

	qsort(arr, 10, sizeof(char), compare);
	
	for (int i = 0; i < 10; i++) {
		printf("%s\n", arr[i]);
	}

	return 0;
}

int compare(const void * p, const void * q) {
	char * str1 = (char *)p;
	char * str2 = (char *)q;

	if (strcmp(str1, str2)<0) {
		return -1;
	}
	else if (strcmp(str1, str2)>0) {
		return 1;
	}
}
