아래 문제를 풀어라. (0.5점씩 총 2.5점)
1-1. 이진수 10011101과 10111101의 배타적 논리합을 수행한 후의 결과를 이진수로 써라.

 

1-2. 위 결과에서 얻은 이진수를 다시 10111101로 배타적 논리합을 수행하고 그 결과를 이진수로 써라.

 

1-3. 이진수 11101110과 01011101의 배타적 논리합을 수행한 후의 결과를 이진수로 써라.

 

1-4. 위 결과에서 얻은 이진수를 다시 01011101로 배타적 논리합을 수행하고 그 결과를 이진수로 써라.

 

1-5. 1-2와 1-4에서 얻은 결과를 1-1의 10011101과 1-3의 11101110과 비교해 보아라. 이 사실을 통해 알 수 있는 것은?

 

 

철수와 영희는 이메일을 자주 사용한다. 하지만 이메일이 다른 사람에 의해 쉽게 읽혀질 수 있다는 사실을 알게 되었으며, 이에 철수와 영희는 이메일을 보내기 전에 이메일 내용을 암호화하여 전송하기를 원한다. 이들을 위해 ^ 연산자를 이용하여 간단한 암호/해독 프로그램을 작성하여라. 암호/해독은 하나의 프로그램이 모두 처리한다. (2.5점)
 

1) vi로 mes.txt 파일에 아래 문장을 작성한 후 저장한다.

 

영희야 오늘 4시 숭실대 정문에서 만나자.

 

 

2) 실행 파일은 crypt.out으로 만들며 실행 시 입력 파일과 출력 파일을 지정한다. 여기에서 10은 ^ 연산자를 사용하여 파일 내용을 암호화할 때 사용되는 값(비밀키)이다. 아래 실행 방법에 따라 프로그램을 실행하면 mes.txt 파일의 내용을 읽어서 암호화한 후 encrypt.txt 파일에 저장한다.

 

(실행 방법) ./crypt.out 10 < mes.txt > encrypt.txt

 

vi로 encrypt.txt 파일을 열어보면 글자가 암호화 된 것을 확인할 수 있다.

 

 

3) 이제 암호화된 encrypt.txt를 해독해보자.

 

(실행 방법) ./crypt.out 10 < encrypt.txt > decrypt.txt

 

vi로 decrypt.txt 파일을 열어보면 글자가 해독된 것을 확인할 수 있다.

 

암호화할 때 사용되는 비밀키와 다른 비밀키로 해독해 보아라. 예를 들어 위에서는 10으로 암호화하고 10으로 해독하였다. 이번에는 93으로 암호화하고 97로 해독하여 내용을 확인해 보아라.

 

위 프로그램에서 비밀키는 main 함수 인자로부터 그 값을 알 수 있으며, 입출력 재지정(< 와 >)을 통해 파일 입출력을 할 수 있다. 다음 프로그램(입력을 그대로 출력하는 프로그램)을 변형하여 프로그램을 완성하여라.

 

#include <stdio.h>

int main(int argc, char *argv[])

{

int c;

while((c=getchar())!=EOF){

putchar(c);

}

return 0;

}

 

 

아래에 명시된 ID와 작업형태, 연봉, 부양가족 수 정보를 최소 공간에 저장하고 출력하는 프로그램을 작성하여라. 최소 공간에 저장하기 위한 패킹 함수와 패킹된 정보를 다시 출력하는 언패킹 함수를 완성하여라. (2.5점)
 

ID는 십진수 6자리(0 – 999999), 작업형태는 십진수 3자리(0 - 999, 연봉은 십진수 9자리(0 – 999999999), 부양가족 수는 십진수 1자리(0 – 9)이며 메모리 배치 순서는 아래와 같다.

 

상위비트 하위비트

Family

Salary

Job_type

ID

 

#include <stdio.h>

unsigned long long pack_employee_data(unsigned id_no, unsigned job_type, unsigned salary, unsigned family);

void print_employee_data(unsigned long long employee);

int main() {

unsigned id_no, salary, job_type, family;

print_employee_data(pack_employee_data(999999, 999, 999999999, 9)); // 최대값

return 0;

}

unsigned long long pack_employee_data(unsigned id_no, unsigned job_type, unsigned salary, unsigned family) { // 코드 작성

 

 

 

 

 

 

 

 

}

void print_employee_data(unsigned long long employee) { // 코드 작성

 

 

 

 

 

 

 

 

 

 

}

아래 정보를 최소 공간에 저장하고 출력하는 프로그램을 작성하여라. 최소 공간에 저장하기 위해서 비트 필드를 이용한다. 정보를 저장할 때에는 구조체 배열에 초기화하는 방식으로 한다.(단, 이름의 최대 길이는 널문자를 포함하여 10자, ID의 최대값은 99999, 나이의 최대값은 65, 연봉의 최대값은 1억으로 제한한다.) (2.5점)
 

name

ID

age

salary

tom

10330

21

24000000

eric

10333

23

28000000

jane

40234

26

40000000

mary

30022

46

65000000

kim

90032

25

38000000

lee

90038

24

30000000

Test_name

99999

65

100000000

 

 

프로그램